---
- hosts: "BO-{{ store }}"
  gather_facts: no

  vars:

#    cheque_date: '04.03.2020'
#    cheque_no: 2023

#    cheque_date: '06.03.2020'
#    cheque_no: 2131
#    loyalty_card: '777'

    messages: [
        { mask: 'errorCode>112<', descr: 'Карта заблокирована. Списание по данной карте невозможно.' },
        { mask: 'errorCode>180<', descr: 'Причиной несписания баллов стала техническая ошибка.\n*********************\nКомментарии к решению клиенту не зачитывать!!!\nОшибка 180 мобильного приложения.\nИстек срок ТОТР ключа.\nМобильное приложение следует открывать сразу после нажатия кассиром кнопки "подытог", либо при возникновении ошибки перезагружать приложение.\nЕсли проблема повторяется неоднократно, то покупателю следует перезайти в учетную запись в мобильном приложении.' },
        { mask: 'Timeout occured while service call', descr: 'Временный сбой связи' },
        { mask: 'No connection available', descr: 'Временный сбой связи' },
        { mask: 'Unknown error while service call', descr: 'Временный сбой связи' },
        { mask: 'Роботизация лояльности', descr: 'Временный сбой связи' }
        ]

  tasks:

    - name: Input variables
      debug:
        var: cheque_date
    - debug:
        var: cheque_no
    - debug:
        var: loyalty_card


    - set_fact:
        prev_cheque_no: "{{ cheque_no|int - 1 }}"

    - debug:
        var: prev_cheque_no

    - set_fact:
        log_date: "{{ cheque_date|regex_replace('.*?(\\d+)\\.(\\d+)\\.(\\d+).*', '\\3\\2\\1') }}"

    - debug:
        var: log_date

    - name: Get loyalty operation
      set_fact:
        pos_name: "{{ 'POS-'+store+'-'+hostvars['localhost'].pos_override[ awx_workflow_job_id|string ]|default(pos) }}"

    - debug:
        var: pos_name

    - shell: zcat /usr/local/gkretail/pos/log/std_pos.log-{{ log_date }}*.gz |sed -n "/BONNR = {{ prev_cheque_no }}/,/BONNR = {{ cheque_no }}/p" |grep -a "keyCode=83\|keyCode=54\|keyCode=84\| ERROR \|Timeout occured while service call\|Unknown error while service call\|No connection available\|Роботизация лояльности\|RESPONSE"
      register: check_info
      no_log: yes
      ignore_errors: yes
      delegate_to: "{{ pos_name }}"

    - debug: 
        var: check_info.stdout_lines

    - fail:
        msg: "Информация о чеке {{ cheque_no }} не найдена в логе /usr/local/gkretail/pos/log/std_pos.log-{{ log_date }}*.gz"
      when: check_info.failed is defined and check_info.failed
        and check_info.stdout == ''

    - fail:
        msg: "{{ pos_name }} Операции подитога или итога не найдены в чеке"
      when: check_info.stdout_lines |length == 0
         or check_info.stdout_lines |select('match', '.*keyCode=83.*') |list |length == 0
         or (check_info.stdout_lines |select('match', '.*keyCode=54.*') |list |length == 0
            and check_info.stdout_lines |select('match', '.*keyCode=84.*') |list |length == 0)


    - block:
        - name: Check communication error 
          set_fact:
            pre_payment_index: -1

        - set_fact:
            pre_payment_index: "{{ ansible_loop.index|int }}"
          when: item is match('.*keyCode=83.*')
            and pre_payment_index|int == -1
          with_items: "{{ check_info.stdout_lines }}"
          loop_control:
            extended: yes

        - debug:
            var: pre_payment_index

        - set_fact:
            payment_index: -1

        - set_fact:
            payment_index: "{{ ansible_loop.index|int }}"
          when: (item is match('.*keyCode=54.*')
                or item is match('.*keyCode=84.*'))
            and payment_index|int == -1
          with_items: "{{ check_info.stdout_lines }}"
          loop_control:
            extended: yes
 
        - debug:
            var: payment_index

        - set_fact:
            check_list: []

        - set_fact:
            check_list: "{{ check_list + [ item ] }}"
          when: ansible_loop.index|int > pre_payment_index|int
            and ansible_loop.index|int < payment_index|int
          with_items: "{{ check_info.stdout_lines }}"
          loop_control:
            extended: yes

        - debug:
            var: check_list

        - set_fact:
            found_event: "{{ item.descr }}"
          when: check_list |select('match','.*' + item.mask + '.*') |list |length > 0
          with_items: "{{ messages }}"
          loop_control:
            extended: yes

      when: found_event is not defined


    - fail: 
        msg: "{{ pos_name }} Технический ошибок между подитогом и итогом не найдено"
      when: found_event is not defined

    - debug:
        msg: "<user_resolution> Добрый день!\nДата: {{ cheque_date }} в магазине: {{ store }}\nна кассе: {{ pos_name|regex_replace('.*-','') }} в чеке: {{ cheque_no }}\nиспользовалась карта лояльности: {{ loyalty_card }}\n\n{{ found_event }}"
      when: found_event is defined
      
